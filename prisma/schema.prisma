// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../apps/muse/src/modules/prisma/dto"
  outputToNestJsResourceStructure = "false"
  exportRelationModifierClasses   = "true"
  reExport                        = "true"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = "Entity"
  fileNamingStyle                 = "camel"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                                        Int         @id @default(autoincrement())

  discordId                                 String      @unique
  username                                  String
  discriminator                             String

  discordToken                              String
  discordRefreshToken                       String

  refreshToken                              String?
}

model Settings {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String      @unique

  // Modules
  
  // Bookworm
  bookwormEnabled                           Boolean?    @default(true)
  bookwormChannelId                         String?
  bookwormDailyEnabled                      Boolean     @default(true)
  bookwormDailyHour                         Int         @default(0)
  bookwormDailyChannelId                    String?
  bookwormPingRoleId                        String?

  // Music
  musicEnabled                              Boolean?    @default(true)
  musicChannelId                            String?
  musicDjRoleId                             String?

  // Reaction trigger
  reactionTriggerEnabled                    Boolean?    @default(true)
  reactionTriggerIgnoredChannelIds          String[]    @default([])



  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

model BookwormLog {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  index                                     Int?

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

model MusicLog {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String
  userId                                    String

  query                                     String
  result                                    Json?

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

model MessageReactionTriggers {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  phrase                                    String
  emojiId                                   String

  exact                                     Boolean     @default(false)
}

enum FeedbackTopicsType {
  CHANNEL
  GOOGLE_SHEET
}

model FeedbackTopics {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  type                                      FeedbackTopicsType
  referenceId                               String

  name                                      String
}

// model GoogleAuthTokens {
//   id                                        Int         @id @default(autoincrement())
//   guildId                                   String
//   userId                                    String

//   client_id                                 String
//   client_secret                             String
//   refresh_token                             String
// }