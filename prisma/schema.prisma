// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../libs/prisma/src/lib/dto"
  outputToNestJsResourceStructure = "false"
  exportRelationModifierClasses   = "true"
  reExport                        = "true"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = "Entity"
  fileNamingStyle                 = "camel"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                                        Int         @id @default(autoincrement())

  discordId                                 String      @unique
  username                                  String
  discriminator                             String

  discordToken                              String
  discordRefreshToken                       String

  refreshToken                              String?
}

model Settings {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String      @unique

  // Modules

  // Bookworm
  bookwormEnabled                           Boolean?    @default(true)
  bookwormChannelId                         String?
  bookwormDailyEnabled                      Boolean     @default(true)
  bookwormDailyHour                         Int         @default(0)
  bookwormDailyChannelId                    String?
  bookwormPingRoleId                        String?

  // QotD
  qotdEnabled                               Boolean?    @default(true)
  qotdChannelId                             String?
  qotdDailyEnabled                          Boolean     @default(true)
  qotdDailyHour                             Int         @default(0)
  qotdDailyChannelId                        String?
  qotdPingRoleId                            String?

  // Music
  musicEnabled                              Boolean?    @default(true)
  musicChannelId                            String?
  musicDjRoleId                             String?

  // Message trigger
  messageTriggerEnabled                     Boolean?    @default(true)
  messageTriggerIgnoredChannelIds           String[]    @default([])

  // Reaction trigger
  reactionTriggerEnabled                    Boolean?    @default(true)
  reactionTriggerIgnoredChannelIds          String[]    @default([])

  // Radio
  radioEnabled                              Boolean?    @default(true)
  radioVoiceChannelId                       String?
  radioTextChannelId                        String?
  radioPlaylist                             String?

  // Message trigger
  timezoneEnabled                           Boolean?    @default(false)
  timezoneIgnoredChannelIds                 String[]    @default([])

  // Mod log
  modLogEnabled                              Boolean?    @default(true)
  modLogDeleteChannelId                      String?
  modLogEditChannelId                        String?
  modLogJoinChannelId                        String?
  modLogLeaveChannelId                       String?

  // Minecraft
  minecraftEnabled                          Boolean?    @default(true)
  minecraftRequiredRoleId                   String?
  minecraftBedrockEnabled                   Boolean?    @default(true)
  minecraftConnectUrl                       String?
  minecraftBedrockPort                      String?
  minecraftChatChannelId                    String?
  minecraftRconHost                         String?
  minecraftRconPort                         String?
  minecraftRconPass                         String?

  // Mod log
  requestRoleEnabled                        Boolean?    @default(true)
  requestRoleLogChannelId                   String?

  // purge
  purgeIgnoredParentChannelIds              String[]    @default([])

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

model BookwormLog {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  index                                     Int?

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

model QotDLog {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  index                                     Int?

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

model MusicLog {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String
  userId                                    String

  query                                     String
  result                                    Json?

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

model RadioLog {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}
model ReactionTriggers {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  phrase                                    String
  emojiId                                   String

  match                                     TriggerMatch @default(any)
}

model MessageTriggers {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  phrase                                    String
  message                                   String

  match                                     TriggerMatch @default(any)
}

enum FeedbackTopicsType {
  CHANNEL
  GOOGLE_SHEET
}

model FeedbackTopics {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  type                                      FeedbackTopicsType
  referenceId                               String

  name                                      String
}

model TimezoneData {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String
  userId                                    String
  timezone                                  String
}

model MinecraftMapping {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String
  userId                                    String
  uuid                                      String
  username                                  String
  bedrock                                   Boolean     @default(false)
}

model RequestRoleEntries {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String

  roleId                                    String
  tos                                       String

  requiredRoles                             Json @default("[]")
  blacklistedUsers                          Json @default("[]")

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

model MusicServiceMap {
  id                                        Int         @id @default(autoincrement())
  guildId                                   String
  voiceChannelId                            String

  instance                                  Int
  state                                     Int

  // timestamps
  createdAt                                 DateTime    @default(now())
  updatedAt                                 DateTime    @updatedAt
}

// model GoogleAuthTokens {
//   id                                        Int         @id @default(autoincrement())
//   guildId                                   String
//   userId                                    String

//   client_id                                 String
//   client_secret                             String
//   refresh_token                             String
// }

enum TriggerMatch {
  any
  word
  message
}
