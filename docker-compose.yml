version: '3'

services:
    muse:
        image: ghcr.io/elysium-stack/muse:main
        restart: unless-stopped
        tty: true
        env_file: ./.env
        ports:
            - '$EXPOSED_API_PORT:3000'
        depends_on:
            - db
            - rabbitmq
            - lavalink
    radio:
        image: ghcr.io/elysium-stack/radio:main
        restart: unless-stopped
        tty: true
        env_file: ./.env
        ports:
            - '$EXPOSED_RADIO_PORT:3000'
        depends_on:
            - db
            - rabbitmq
            - lavalink
    music:
        image: ghcr.io/elysium-stack/music:main
        restart: unless-stopped
        tty: true
        env_file: ./.env
        environment:
            - INSTANCE_NUMBER=1
        depends_on:
            - db
            - rabbitmq
            - lavalink
    music2:
        image: ghcr.io/elysium-stack/music:main
        restart: unless-stopped
        tty: true
        env_file: ./.env
        environment:
            - INSTANCE_NUMBER=2
        depends_on:
            - db
            - rabbitmq
            - lavalink
    music3:
        image: ghcr.io/elysium-stack/music:main
        restart: unless-stopped
        tty: true
        env_file: ./.env
        environment:
            - INSTANCE_NUMBER=3
        depends_on:
            - db
            - rabbitmq
            - lavalink
    db:
        image: postgres:12.2
        restart: unless-stopped
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: muse
        ports:
            - '$EXPOSED_DB_PORT:5432'
        volumes:
            - '$POSTGRES_DATA_LOCATION:/var/lib/postgresql/data'
    lavalink:
        image: ghcr.io/lavalink-devs/lavalink:latest
        restart: unless-stopped
        volumes:
            - ./.docker/lavalink.yml:/opt/Lavalink/application.yml:ro
    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - '$EXPOSED_RABBIT_MANAGEMENT_PORT:15672'
    prometheus:
        image: prom/prometheus
        restart: unless-stopped
        volumes:
            - ./.docker/prometheus.prod.yml:/etc/prometheus/prometheus.yml
